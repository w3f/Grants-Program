name: Google Sheet Update
on:
  pull_request_target:
    types: [closed]

jobs:
  update_sheet:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # - name: 'local test: get all added files in the PR'
      #   if: ${{ env.ACT }}
      #   id: 'files'
      #   run: echo "::set-output name=added::$(echo applications/workflow_testing1.md5 applications/workflow_testing.md)"

      # - name: Local Testing Checkout
      #   uses: actions/checkout@master
      #   if: ${{ env.ACT }}

      # - name: 'local testing parse files'
      #   if: ${{ env.ACT }}
      #   id: grant_parser
      #   uses: Ana06/get-changed-files@v2.0.0
      #   with:
      #     path: "${{ steps.filter.outputs.added }}"

      - name: 'get names of all added files in the applications folder'
        if: ${{ !env.ACT }}
        id: 'files'
        uses: Ana06/get-changed-files@v2.0.0
        with:
          filter: 'applications/*.md'

      - name: Checkout
        if: ${{ !env.ACT && steps.files.outputs.added }}
        uses: actions/checkout@v2

      - name: 'parse files'
        if: ${{ !env.ACT && steps.files.outputs.added }}
        id: grant_parser
        uses: w3f/parse-grant-application-action@v1
        with:
          path: "${{ github.workspace }}/${{ steps.files.outputs.added }}"

      - name: Get current date
        if: ${{ steps.files.outputs.added }}
        id: date
        run: echo "::set-output name=date::$(date +'%d/%m/%Y')"

      - name: 'write the data to a gsheet'
        if: ${{ steps.files.outputs.added }}
        uses: jroehl/gsheet.action@v1.2.0
        with:
          spreadsheetId: ${{ secrets.SPREADSHEET_ID }}
          commands: |
            [
              {
                "command": "appendData",
                "args":
                {
                  "data": [[
                    "${{ steps.grant_parser.outputs.team_name }}",
                    "${{ steps.grant_parser.outputs.team_name }}",
                    "Open Grants",
                    "${{ steps.grant_parser.outputs.project_name }}",
                    "${{ steps.grant_parser.outputs.address }}",
                    "${{ steps.grant_parser.outputs.contact_name }}",
                    "${{ steps.grant_parser.outputs.contact_name }}",
                    "${{ steps.grant_parser.outputs.contact_title }}",
                    "${{ steps.grant_parser.outputs.contact_email }}",
                    "${{ steps.grant_parser.outputs.country }}",
                    "",
                    "https://github.com/w3f/Grants-Program/pull/${{ github.event.pull_request.number }}",
                    "https://github.com/w3f/Grants-Program/pull/${{ github.event.pull_request.number }}",
                    "USD", "0", "0", "0",
                    "${{ steps.grant_parser.outputs.total_cost_btc }}",
                    "${{ steps.grant_parser.outputs.total_cost_dai }}",
                    "",
                    "",
                    "Signed",
                    "https://github.com/w3f/Open-Grants-Program/pull/${{ github.event.pull_request.number }}",
                    "${{ steps.date.outputs.date }}"
                  ]],
                  "worksheetTitle": "Legal",
                  "minCol": 1,
                  "valueInputOption": "USER_ENTERED"
                }
               }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
